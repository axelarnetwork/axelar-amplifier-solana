/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getStructDecoder,
  getStructEncoder,
  getU64Decoder,
  getU64Encoder,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from 'gill';

/** Custom U256 implementation that works with Anchor */
export type U256 = { inner: Array<bigint> };

export type U256Args = { inner: Array<number | bigint> };

export function getU256Encoder(): FixedSizeEncoder<U256Args> {
  return getStructEncoder([
    ['inner', getArrayEncoder(getU64Encoder(), { size: 4 })],
  ]);
}

export function getU256Decoder(): FixedSizeDecoder<U256> {
  return getStructDecoder([
    ['inner', getArrayDecoder(getU64Decoder(), { size: 4 })],
  ]);
}

export function getU256Codec(): FixedSizeCodec<U256Args, U256> {
  return combineCodec(getU256Encoder(), getU256Decoder());
}
