/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  type Codec,
  type Decoder,
  type Encoder,
  type ReadonlyUint8Array,
} from 'gill';

export type OperatorshipTransferred = {
  oldOperator: ReadonlyUint8Array;
  newOperator: ReadonlyUint8Array;
};

export type OperatorshipTransferredArgs = OperatorshipTransferred;

export function getOperatorshipTransferredEncoder(): Encoder<OperatorshipTransferredArgs> {
  return getStructEncoder([
    ['oldOperator', addEncoderSizePrefix(getBytesEncoder(), getU32Encoder())],
    ['newOperator', addEncoderSizePrefix(getBytesEncoder(), getU32Encoder())],
  ]);
}

export function getOperatorshipTransferredDecoder(): Decoder<OperatorshipTransferred> {
  return getStructDecoder([
    ['oldOperator', addDecoderSizePrefix(getBytesDecoder(), getU32Decoder())],
    ['newOperator', addDecoderSizePrefix(getBytesDecoder(), getU32Decoder())],
  ]);
}

export function getOperatorshipTransferredCodec(): Codec<
  OperatorshipTransferredArgs,
  OperatorshipTransferred
> {
  return combineCodec(
    getOperatorshipTransferredEncoder(),
    getOperatorshipTransferredDecoder()
  );
}
