/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getBooleanDecoder,
  getBooleanEncoder,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
  type ReadonlyUint8Array,
} from 'gill';

export type SolanaAccountMetadata = {
  /** The [`solana_program::pubkey::Pubkey`], converted to bytes. */
  pubkey: ReadonlyUint8Array;
  /**
   * If this account is a signer of the transaction. See original
   * [`solana_program::instruction::AccountMeta::is_signer`].
   */
  isSigner: boolean;
  /**
   * If this account is writable. See original
   * [`solana_program::instruction::AccountMeta::is_writable`].
   */
  isWritable: boolean;
};

export type SolanaAccountMetadataArgs = SolanaAccountMetadata;

export function getSolanaAccountMetadataEncoder(): FixedSizeEncoder<SolanaAccountMetadataArgs> {
  return getStructEncoder([
    ['pubkey', fixEncoderSize(getBytesEncoder(), 32)],
    ['isSigner', getBooleanEncoder()],
    ['isWritable', getBooleanEncoder()],
  ]);
}

export function getSolanaAccountMetadataDecoder(): FixedSizeDecoder<SolanaAccountMetadata> {
  return getStructDecoder([
    ['pubkey', fixDecoderSize(getBytesDecoder(), 32)],
    ['isSigner', getBooleanDecoder()],
    ['isWritable', getBooleanDecoder()],
  ]);
}

export function getSolanaAccountMetadataCodec(): FixedSizeCodec<
  SolanaAccountMetadataArgs,
  SolanaAccountMetadata
> {
  return combineCodec(
    getSolanaAccountMetadataEncoder(),
    getSolanaAccountMetadataDecoder()
  );
}
