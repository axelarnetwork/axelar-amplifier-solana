/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getAddressDecoder,
  getAddressEncoder,
  getOptionDecoder,
  getOptionEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getU64Decoder,
  getU64Encoder,
  getUtf8Decoder,
  getUtf8Encoder,
  type Address,
  type Codec,
  type Decoder,
  type Encoder,
  type Option,
  type OptionOrNullable,
} from 'gill';

/** Represents the event emitted when gas is refunded. */
export type GasRefundedEvent = {
  /** The receiver of the refund */
  receiver: Address;
  /** Message Id */
  messageId: string;
  /** The amount of SOL refunded */
  amount: bigint;
  /** Optional SPL token account (receiver) */
  splTokenAccount: Option<Address>;
};

export type GasRefundedEventArgs = {
  /** The receiver of the refund */
  receiver: Address;
  /** Message Id */
  messageId: string;
  /** The amount of SOL refunded */
  amount: number | bigint;
  /** Optional SPL token account (receiver) */
  splTokenAccount: OptionOrNullable<Address>;
};

export function getGasRefundedEventEncoder(): Encoder<GasRefundedEventArgs> {
  return getStructEncoder([
    ['receiver', getAddressEncoder()],
    ['messageId', addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
    ['amount', getU64Encoder()],
    ['splTokenAccount', getOptionEncoder(getAddressEncoder())],
  ]);
}

export function getGasRefundedEventDecoder(): Decoder<GasRefundedEvent> {
  return getStructDecoder([
    ['receiver', getAddressDecoder()],
    ['messageId', addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
    ['amount', getU64Decoder()],
    ['splTokenAccount', getOptionDecoder(getAddressDecoder())],
  ]);
}

export function getGasRefundedEventCodec(): Codec<
  GasRefundedEventArgs,
  GasRefundedEvent
> {
  return combineCodec(
    getGasRefundedEventEncoder(),
    getGasRefundedEventDecoder()
  );
}
