/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  fixDecoderSize,
  fixEncoderSize,
  getBytesDecoder,
  getBytesEncoder,
  getStructDecoder,
  getStructEncoder,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
  type ReadonlyUint8Array,
} from 'gill';
import { getU256Decoder, getU256Encoder, type U256, type U256Args } from '.';

export type VerifierSetRotatedEvent = {
  epoch: U256;
  verifierSetHash: ReadonlyUint8Array;
};

export type VerifierSetRotatedEventArgs = {
  epoch: U256Args;
  verifierSetHash: ReadonlyUint8Array;
};

export function getVerifierSetRotatedEventEncoder(): FixedSizeEncoder<VerifierSetRotatedEventArgs> {
  return getStructEncoder([
    ['epoch', getU256Encoder()],
    ['verifierSetHash', fixEncoderSize(getBytesEncoder(), 32)],
  ]);
}

export function getVerifierSetRotatedEventDecoder(): FixedSizeDecoder<VerifierSetRotatedEvent> {
  return getStructDecoder([
    ['epoch', getU256Decoder()],
    ['verifierSetHash', fixDecoderSize(getBytesDecoder(), 32)],
  ]);
}

export function getVerifierSetRotatedEventCodec(): FixedSizeCodec<
  VerifierSetRotatedEventArgs,
  VerifierSetRotatedEvent
> {
  return combineCodec(
    getVerifierSetRotatedEventEncoder(),
    getVerifierSetRotatedEventDecoder()
  );
}
